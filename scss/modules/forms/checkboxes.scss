$checkbox-size: rem-calc(17);

.checkbox {
    display: inline-block;
    margin-bottom: $bit * 3.5;
    color: color(black);
    font-weight: font-weight(bold);
    transition: color 250ms;
    cursor: pointer;
}
.checkbox_secondary {
    color: color(dark-gray);
}
.checkbox__input {
    width: 0;
    height: 0;
    margin: 0;
    padding: 0;
    opacity: 0;
    position: absolute;
}
.checkbox__text {
    position: relative;
    display: flex;
    padding-right: $checkbox-size + ($bit * 3);

    .checkbox_justify_left & {
        padding-left: $checkbox-size + ($bit * 3);
        padding-right: 0;
    }

    &::before {
        content: '';
        position: absolute;
        right: 0;
        top: (rem-calc(20) - $checkbox-size) / 2;
        display: block;
        flex-shrink: 0;
        width: $checkbox-size;
        height: $checkbox-size;
        border: 2px solid #b8b8b8;
        transition: border-color 250ms;

        .checkbox_justify_left & {
            right: auto;
            left: 0;
        }
    }

    &::after {
        content: '';
        position: absolute;
        right: rem-calc(-11);
        top: rem-calc(7);
        width: rem-calc(16);
        height: rem-calc(8);
        border-style: solid;
        border-color: transparent;
        border-width: 0 0 2px 2px;
        transform: translate(-50%, -50%) rotate(-45deg);
        transition: border-color 250ms;

        .checkbox_justify_left & {
            right: auto;
            left: rem-calc(12);
        }
    }

    .checkbox:hover & {
        &::before {
            border-color: color(black);
        }
    }
    .checkbox__input:focus + & {
        &::before {
            border-color: color(black);
            box-shadow: 0 0 0 ($bit * 1) rgba(color(dark-gray), .1);
        }
    }
    .checkbox__input:checked + & {
        &::before {
            border-color: color(primary);
        }
        &::after {
            border-color: color(primary);
        }
    }
}
.checkbox__error {
    order: 3;
    display: inline-block;
    padding: $bit / 2;
    padding-left: $checkbox-size + ($bit * 1.5);
    color: color(medium-gray);
    font-size: font-size(small);
    line-height: 1;

    .input__field_status_invalid ~ & {
        opacity: 0;
    }
}
